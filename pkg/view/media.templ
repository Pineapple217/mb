package view

import (
	"github.com/Pineapple217/mb/pkg/database"
	"github.com/Pineapple217/mb/pkg/config"
	ct "github.com/Pineapple217/mb/pkg/context"
	"strconv"
	"time"
	"strings"
)

templ mediaBoiler() {
	@boiler("mb media manager") {
		<body>
			@header()
			<hr color="gray"/>
			@uploadMedia()
			<hr color="gray"/>
			{ children... }
		</body>
	}
}

templ Media(mediaFiles []database.Mediafile) {
	@mediaBoiler() {
		<div class="mdc">
			for _, m := range mediaFiles {
				<div class="mde">
					<div class="mdr">
						<a
							href={ templ.URL("media/" + strconv.FormatInt(m.ID, 10) + "/edit") }
							title="edit"
						>[e]</a>
						<a
							href={ templ.URL("media/" + strconv.FormatInt(m.ID, 10) + "/delete") }
							title="delete"
						>[x]</a>
					</div>
					<a href={ templ.URL("/media/" + strconv.FormatInt(m.ID, 10)) }>
						<img src={ "media/t/" + m.FilePath } alt={ m.FileName }/>
					</a>
					<p>{ m.FileName }</p>
				</div>
			}
		</div>
	}
}

templ uploadMedia() {
	<details>
		<summary>Upload Media</summary>
		<br/>
		<form action="/media" method="POST" enctype="multipart/form-data">
			<div>
				<label>
					[ choose file ] <input
	type="file"
	accept=".jpg,.jpeg,.png,.gif,.bmp,.mp3,.wav,.flac,.mp4,.mov"
	name="upload"
/>
				</label>
				<br/>
				<br/>
				<label>
					name: <input type="text" name="name" value="" tabindex="2" size="30"/>
				</label>
				<input type="submit" id="submit_p" tabindex="3"/>
				<label for="submit_p">[ upload ]</label>
			</div>
			<br/>
		</form>
	</details>
}

templ Mediafile(media database.Mediafile) {
	@mediaBoiler() {
		if ct.IsAuth(ctx) {
			<nav>
				<div><a href={ templ.URL("/media") }>← Media</a></div>
			</nav>
		}
		@mediaBase(media, true, false)
	}
}

templ DeleteMedia(media database.Mediafile) {
	@mediaBoiler() {
		<nav>
			<div><a href={ templ.URL("/media/" + strconv.FormatInt(media.ID, 10)) }>← Back</a></div>
		</nav>
		<br/>
		<form action={ templ.URL("/media/" + strconv.FormatInt(media.ID, 10) + "/delete") } method="POST">
			<p class="s">Are you sure you want to delete this mediafile?</p>
			<input type="hidden" value={ strconv.FormatInt(media.ID, 10) } name="id"/>
			<input type="submit" id="submit_d" tabindex="1"/>
			<label for="submit_d">[ delete ]</label>
		</form>
		@mediaBase(media, false, false)
	}
}

templ mediaBase(media database.Mediafile, deleteButton bool, editMode bool) {
	<div>
		<hgroup>
			if editMode {
				<form action={ templ.URL("/media/" + strconv.FormatInt(media.ID, 10) + "/edit") } method="POST">
					<input type="hidden" value={ strconv.FormatInt(media.ID, 10) } name="id"/>
					<label>
						name: <input type="text" name="name" value={ media.FileName } tabindex="1" size="30" autofocus/>
					</label>
					<input type="submit" id="submit_e" tabindex="2"/>
					<label for="submit_e">[ edit ]</label>
				</form>
			} else {
				<h1>{ media.FileName }</h1>
			}
			<p>
				@timeDisplay(media.UploadedAt.In(config.OutputTimezone))
				{ " " } | { media.FileType }
				| { strings.ToUpper(media.FileExtention) }
				if ct.IsAuth(ctx) {
					<span class="r">
						<a
							href={ templ.URL("/media/" + strconv.FormatInt(media.ID, 10) + "/edit") }
							title="edit"
						>[e]</a>
						if deleteButton {
							<a
								href={ templ.URL("/media/" + strconv.FormatInt(media.ID, 10) + "/delete") }
								title="delete"
							>[x]</a>
						}
					</span>
				}
			</p>
		</hgroup>
		if media.FileType == "image" {
			<img class="max" src={ "/m/" + media.FilePath } alt={ media.FileName }/>
		} else if media.FileType == "audio" {
			<a target="_blank" href={ "/m/" + templ.URL(media.FilePath) }>
				source
			</a>
			<audio controls controlslist="noplaybackrate nodownload">
				<source src={ "/m/" + media.FilePath }/>
			</audio>
		} else if media.FileType == "video" {
			<a target="_blank" href={ "/m/" + templ.URL(media.FilePath) }>
				source
			</a>
			<br/>
			<video controls controlslist="noplaybackrate nodownload" disablepictureinpicture>
				<source src={ "/m/" + media.FilePath }/>
			</video>
		}
	</div>
}

templ EditMedia(m database.Mediafile) {
	@mediaBoiler() {
		<nav>
			<div><a href={ templ.URL("/media/" + strconv.FormatInt(m.ID, 10)) }>← Back</a></div>
		</nav>
		<br/>
		@mediaBase(m, true, true)
	}
}

templ timeDisplay(time time.Time) {
	<time datetime={ time.Format("2006-01-02T15:04:05.000Z") }>{ time.Format("Mon, 2 Jan 2006 15:04:05 MST") }</time>
}
